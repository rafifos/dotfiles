# ~/.zshrc: Sourced by ZSH(1) in interactive shells. It should contain commands
# to set up aliases, functions, options, key bindings, etc.
#
# TODO: Continue to implement usefullness starting with:
# https://github.com/unixorn/awesome-zsh-plugins#completions

# Colored GCC warnings and errors.
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# make less more friendly for non-text input files, see lesspipe(1).
[[ -x /usr/bin/lesspipe ]] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable color support for dircolors.
[[ -f ~/.dircolors ]] && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

# Set $PATH so it includes user's private binaries if it exists.
[[ -d ~/bin ]] && PATH="$HOME/bin:$PATH"
[[ -d ~/.local/bin ]] && PATH="$HOME/.local/bin:$PATH"

# Add Linuxbrew to $PATH if it's installed.
[[ -d /home/linuxbrew/.linuxbrew ]] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

# Enable colorized long listing with human-readable size.
alias ls='LC_COLLATE=C ls -lAh --color=auto --group-directories-first'

# List in raw format with one entry per line.
alias lsraw='LC_COLLATE=C \ls -N1 --group-directories-first'

# Enable unified diff format by default.
alias diff='diff -u'

# Disable wget log file
alias wget='wget --hsts-file='

# Shorthand for alias to
#
# * Prompt before overwriting files. (-i, --interactive)
# * Preserve: mode, ownership and timestamps. (-p)
# * Explain what operations are being done. (-v, --verbose)
alias cp='cp -ipv'

# Shorthand for alias to
#
# * Prompt before overwriting files. (-i, --interactive
# * Move only when the SOURCE file is newer than the destination file or when
#   the destination file is missing. (-u, --update)
# * Explain what operations are being done. (-v, --verbose)
alias mv='mv -iuv'

# Shorthand for alias to
#
# * Prompt once before removing more than three files, or when removing
#   recursively. (-i)
# * Explain what operations are being done. (-v, --verbose)
alias rm='rm -Iv'

# Shorthand for alias to
#
# * Only display ANSI "color" escape sequences in "raw" form.
#   (-R, --RAW-CONTROL-CHARS)
# * Automatically exit if the entire file can be displayed on the first screen.
#   (-F, --quit-if-one-screen)
# * Disable sending the termcap (de)initialization strings to the terminal to
#   avoid unnecessary operations like clearing the screen. (-X, --no-init)
# * Use two tab stops. (-x2, --tabs=n)
alias less='less -RFXx2'

# Show mode bits of files and directories in octal form.
#
# %A - Access rights in human readable form
# %a - Access rights in octal
# %N - Quoted file name with dereference if symbolic link
alias lsm='stat -c "%A %a %N"'

# Shows the current session time.
# Use option "-s" to show the session start.
#
# @param $@ (optional) the options
# @options ["-s","-h"]
# @throws 1 Unknown option
seti() {
  local uptime session
  session=0

  case "$1" in
    -s)
      session=1
      ;;
    -h)
      printf "\e[1mUsage: \e[36mseti \e[30m[OPTIONS]\n"
      printf "  \e[01;36m-s  \e[0mShow session start\n"
      printf "  \e[01;36m-h  \e[0mShow this help\e[0m\n"
      return 0
      ;;
    -*)
      printf "\e[31mUnknown option\e[0m"
      return 1
      ;;
  esac

  if [ $session -gt 0 ]
  then
    uptime=$(uptime -s)
  else
    uptime=$(</proc/uptime)
    uptime=${uptime%%.*}

    s=$(( uptime%60 ))
    m=$(( uptime/60%60 ))
    h=$(( uptime/60/60%24 ))
    d=$(( uptime/60/60/24 ))

    uptime=""$d"d "$h"h "$m"m "$s"s"
  fi
  printf "\e[36m%s\e[0m" "$uptime"
  return 0
}

# Create a new directory and enter it.
#
# @param $1 the name of the directory to create and enter
mkd() {
  mkdir -p "$@" && cd "$@"
}

# Installs antibody if it doesn't exist.
[[ ! -f /usr/local/bin/antibody ]] && curl -sL git.io/antibody | sh -s

# Starts Antibody.
source <(antibody init)

# Only bundled if an external program is installed.
(( $+commands[adb] )) && antibody bundle robbyrussell/oh-my-zsh path:plugins/adb || echo 'adb is not installed or not located in $PATH.'
(( $+commands[http] )) && antibody bundle robbyrussell/oh-my-zsh path:plugins/httpie || echo 'httpie is not installed or not located in $PATH.'
(( $+commands[xclip] )) && antibody bundle zpm-zsh/clipboard || echo 'xclip is not installed or not located in $PATH.'

# Only bundled if a file is present.
[[ -f /usr/lib/command-not-found ]] && antibody bundle sorin-ionescu/prezto path:modules/command-not-found
[[ -f ~/.gitconfig ]] && antibody bundle zdharma/zsh-diff-so-fancy

antibody bundle MichaelAquilina/zsh-you-should-use
antibody bundle sorin-ionescu/prezto path:modules/archive
antibody bundle robbyrussell/oh-my-zsh path:plugins/colored-man-pages
antibody bundle robbyrussell/oh-my-zsh path:plugins/transfer
antibody bundle rapgenic/zsh-git-complete-urls
antibody bundle yous/vanilli.sh
antibody bundle zpm-zsh/colors
antibody bundle zsh-users/zsh-autosuggestions
antibody bundle zsh-users/zsh-completions
antibody bundle zdharma/fast-syntax-highlighting
antibody bundle zsh-users/zsh-history-substring-search

# Change it according to your up/down arrow keys.
# To see if they match with your keyboard, run cat -v and observe it's output.
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main pattern)
ZSH_HIGHLIGHT_PATTERNS+=("rm *" "fg=white,bold,bg=red")

ZSH_AUTOSUGGEST_USE_ASYNC=true

# Binds the "Ctrl + Space" to fetch a command autosuggestion.
bindkey '^ ' autosuggest-fetch

# Binds the "Ctrl + ->" to accept the command autosuggestion.
bindkey '^[[C' autosuggest-accept

# Using the "pure" prompt, made by Sindre Sorhus.
antibody bundle mafredri/zsh-async
antibody bundle sindresorhus/pure