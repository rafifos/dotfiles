# `.zshenv`
#
# [Read every time]
#
# This file is always sourced, so it should set environment variables which
# need to be updated frequently. PATH (or its associated counterpart path) is a
# good example because you probably don't want to restart your whole session to
# make it update. By setting it in that file, reopening a terminal emulator will
# start a new Zsh instance with the PATH value updated.
#
# But be aware that this file is read even when Zsh is launched to run a single
# command (with the -c option), even by another tool like make. You should be
# very careful to not modify the default behavior of standard commands because it
# may break some tools (by setting aliases for example).
#
# Source: https://unix.stackexchange.com/a/487889

typeset -U path
[[ -d '/usr/local/sbin' ]] && path=('/usr/local/sbin' "$path[@]")

export LANG='pt_BR.UTF-8'
export LANGUAGE='pt_BR.UTF-8'
export LC_ALL='pt_BR.UTF-8'
export LC_COLLATE='pt_BR.UTF-8'
export LC_CTYPE='pt_BR.UTF-8'
export LC_MESSAGES='pt_BR.UTF-8'
export LC_MONETARY='pt_BR.UTF-8'
export LC_NUMERIC='pt_BR.UTF-8'
export LC_TIME='pt_BR.UTF-8'

# WSL2 overrides and fixes.
if [[ "$(</proc/sys/kernel/osrelease)" == *microsoft* ]]; then
  # Workaround for WSL2 not freeing up resources after exit.
  # See: https://github.com/microsoft/WSL/issues/4166#issuecomment-618159162
  #
  # NOTE: Don't forget to `flock` the cronjob.
  [ -z "$(ps -ef | grep cron | grep -v grep)" ] && sudo /etc/init.d/cron start >/dev/null 2>&1

  # Workaround for using gpg without a graphical interface.
  export GPG_TTY="$(tty)"

  if [[ -o 'interactive' ]]; then
    # Completions for Docker.
    if [[ ! -f /usr/share/zsh/vendor-completions/_docker ]]; then
      curl -fsSL https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker | sudo tee /usr/share/zsh/vendor-completions/_docker >/dev/null
    fi
  fi

elif [[ -o 'interactive' ]]; then
  # Completions for kubectl and helm.
  source <(helm completion zsh)
  source <(kubectl completion zsh)
fi

# Injects Linuxbrew into the current shell session.
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
