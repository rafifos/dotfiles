#!/usr/bin/env bash
# shellcheck disable=SC2155,SC1090
#
# References:
# - https://github.com/arcticicestudio/igloo/blob/ac9f7bf7a3e931ff4825757a428e9c00fbb45543/snowblocks/bash/bootstrap
# - https://misc.flogisoft.com/bash/tip_colors_and_formatting
#
export BOOTSTRAP_BASE_DIR="$(pwd)"

__bootstrap::log_info() {
  printf "\e[34m[INFO]\e[0m %s\n" "$*"
}

__bootstrap::log_warn() {
  printf "\e[33m[WARN]\e[0m %s\n" "$*"
}

__bootstrap::log_error() {
  printf "\e[31m[ERROR]\e[0m %s\n" "$*" 1>&2
}

__bootstrap::load_core_module() {
  local module
  
  if [ "$#" -eq 0 ]; then
    # shellcheck disable=SC2128
    __bootstrap::log_info "Missing parameter while calling function $FUNCNAME"
    __bootstrap::log_error "Error while loading core modules"
    return 1
  fi

  # shellcheck disable=SC2048
  for module in $*; do
    module="$BOOTSTRAP_BASE_DIR/_bootstrap/$module.sh"

    if [[ -f "$module" ]]; then
      if source "$module"; then
        __bootstrap::log_info "Core module $(basename "$module") successfully loaded"
      else
        __bootstrap::log_info "Error while loading core module $(basename "$module")"
      fi
    else
      __bootstrap::log_error "Core module $(basename "$module") not found"
      return 1
    fi
  done

  __utils::pause_and_clear
}

__bootstrap::load_core_module core/utils core/homemaker core/apt

if ! hash zsh 2>/dev/null; then
  __apt::install zsh

  chsh -s "$(command -v zsh)" "$USER"

  __bootstrap::log_warn "zsh was installed, please restart your shell and re-run this script"
  exit 0
fi

__apt::install build-essential

if ! hash brew 2>/dev/null; then
  __bootstrap::log_info "Installing Linuxbrew"
  __utils::warn_elevation

  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  test -d "$HOME/.linuxbrew" && eval "$("$HOME"/.linuxbrew/bin/brew shellenv)"
  test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

  __utils::pause_and_clear
fi

__bootstrap::log_info "Installing cli packages via Linuxbrew Bundle"
brew bundle --verbose
__utils::pause_and_clear

__apt::install network-manager-openvpn-gnome ngrok

__apt::add-key "https://packages.microsoft.com/keys/microsoft.asc" \
               "https://download.docker.com/linux/ubuntu/gpg" \
               "https://packagecloud.io/shiftkey/desktop/gpgkey" \
               "https://dl.google.com/linux/linux_signing_key.pub"

__apt::add-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" \
                      "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
                      "deb [arch=amd64] https://packagecloud.io/shiftkey/desktop/any any main" \
                      "deb [arch=amd64] https://dl.google.com/linux/chrome/deb stable main" \
                      "ppa:openrazer/stable" "ppa:polychromatic/stable"

__apt::install code \
               docker-ce docker-ce-cli containerd.io \
               github-desktop \
               google-chrome-stable \
               openrazer-meta polychromatic

__flatpak::remote-add flathub https://flathub.org/repo/flathub.flatpakrepo

__flatpak::install com.getpostman.Postman \
                   com.slack.Slack \
                   com.spotify.Client

source "$(brew --prefix asdf)/asdf.sh"
asdf plugin add nodejs
bash "$HOME/.asdf/plugins/nodejs/bin/import-release-team-keyring"

if [[ ! -x "$(pwd)/homemaker" ]]; then
  __homemaker::install
fi
