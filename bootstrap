#!/usr/bin/env bash

# Enable xtrace if the DEBUG environment variable is set
if [[ ${DEBUG-} =~ ^1|yes|true$ ]]; then
  set -o xtrace # Trace the execution of the script (debug)
fi

# Only enable these shell behaviours if we're not being sourced
# Approach via: https://stackoverflow.com/a/28776166/8787985
if ! (return 0 2>/dev/null); then
  # A better class of script...
  set -o errexit  # Exit on most errors (see the manual)
  set -o nounset  # Disallow expansion of unset variables
  set -o pipefail # Use last non-zero exit code in a pipeline
fi

# Enable errtrace or the error trap handler will not work as expected
set -o errtrace # Ensure the error trap handler is inherited

# Sets `\n\t` as the word separator for the Interal Field Separator,
# this tells bash how to separate words, and governs how it will
# iterate through a sequence.
IFS=$'\n\t'

# Install base packages.
xargs <packages-base.txt sudo apt install --assume-yes

# Homebrew is a great way to install packages without messing with dependencies system-wide.
if [[ ! -d /home/linuxbrew/.linuxbrew ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || return 1
fi
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" && brew bundle --verbose

if [[ "$(</proc/sys/kernel/osrelease)" != *microsoft* ]]; then
  CWD="$PWD"
  TMPD="$(mktemp -d)"

  # Don't clutter CWD with downloaded packages.
  cd "$TMPD"

  # The browser built by Google.
  curl -fsSLO "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"

  # Code editing. Redefined.
  curl -fsSLO 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' code_amd64.deb

  # Install downloaded .deb files.
  sudo apt install ./*.deb

  # Go back to our current directory.
  cd "$CWD"

  # An entirely open source driver and user-space daemon that allows you to
  # manage your Razer peripherals on GNU/Linux.
  sudo add-apt-repository -yu ppa:openrazer/stable
  sudo gpasswd -a "$USER" plugdev

  # A cross-distro front-end for the OpenRazer project.
  sudo add-apt-repository -yu ppa:polychromatic/stable

  # Docker Engine is an open source containerization technology for building and
  # containerizing your applications.
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
  sudo usermod -aG docker "$USER" && sudo newgrp docker

  # Open Source SQL Editor and Database Manager.
  curl -fsSL 'https://deb.beekeeperstudio.io/beekeeper.key' | sudo apt-key add -
  echo 'deb [arch=amd64] https://deb.beekeeperstudio.io stable main' | sudo tee /etc/apt/sources.list.d/beekeeper-studio-app.list

  # The biggest Flatpak repository for Linux.
  flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

  # Install GNOME specific packages.
  xargs <packages-gnome.txt sudo apt install --assume-yes

  # Install Flatpak software.
  xargs <packages-flatpak.txt flatpak install --user --if-not-exists --noninteractive
else
  CWD="$PWD"
  TMPD="$(mktemp -d)"

  # Don't clutter CWD with downloaded packages.
  cd "$TMPD"

  # Legendary Git GUI client for Windows, Mac & Linux.
  curl -fsSLO "https://release.gitkraken.com/linux/gitkraken-amd64.deb"

  # Install downloaded .deb files.
  sudo apt install ./*.deb

  # Go back to our current directory.
  cd "$CWD"

  # Install WSL specific packages.
  xargs <packages-wsl.txt sudo apt install --assume-yes
fi

# Common configurations.
CONFIG='config.yaml'
DOTBOT_DIR='.dotbot'
DOTBOT_BIN='bin/dotbot'

BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "${BASEDIR}"
git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${DOTBOT_DIR}"

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
